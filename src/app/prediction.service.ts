import { Injectable } from '@angular/core';
import { PredictionResult } from './prediction-result';
import { HttpClient } from '@angular/common/http';
import { tap, catchError } from 'rxjs/operators';
import { Observable, of } from 'rxjs';


const predictionUrl = 'http://localhost:8080/cnn/v1/pred';

@Injectable({
  providedIn: 'root'
})
export class PredictionService {

  constructor(
    private http: HttpClient
  ) { }

  sendFile(data: FormData): Observable<PredictionResult> {
    return this.http.post<PredictionResult>(predictionUrl, data).pipe(
      tap(_ => this.log(`fetched result`)),
      catchError(this.handleError<PredictionResult>(`result failed`))
    );
  }

  private log(message: string) {
    console.log(`PredictionService: ${message}`);
  }

  private handleError<T>(operation = 'operation', result?: T) {
    return (error: any): Observable<T> => {

      // TODO: send the error to remote logging infrastructure
      console.error(error); // log to console instead

      // TODO: better job of transforming error for user consumption
      this.log(`${operation} failed: ${error.message}`);

      // Let the app keep running by returning an empty result.
      return of(result as T);
    };
  }
}
